name: workflow
on: [push, pull_request]
jobs:
  job:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    services:
      dynamodb:
        image: amazon/dynamodb-local
        # @note Github overwrites WORKDIR to repository path, so overwrite that again
        options: >-
          --workdir /home/dynamodblocal
          --health-cmd "curl --fail http://127.0.0.1:8000/shell/ || exit 1" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '12'
      # Client
      - name: "[Client] Prepare"
        working-directory: client
        run: npm ci
      - name: "[Client] Build"
        working-directory: client
        run: npm run build:prod
      # Server
      - name: "[Server] Prepare"
        working-directory: server
        run: npm ci
      - name: "[Server] Lint"
        working-directory: server
        run: npm run lint
      - name: "[Server] Test"
        working-directory: server
        run: npm test
        env:
          DYNAMO_TYPES_ENDPOINT: http://dynamodb:8000
      - name: "[Server] Build"
        working-directory: server
        run: npm run build
      - name: "[Server] Packaging"
        working-directory: server
        run: npm run pack
      # Infra
#      - name: "[Infra] Prepare"
#        working-directory: infra
#        run: npm ci
#      - name: "[Infra] Lint"
#        working-directory: infra
#        run: npm run lint
#      - name: "[Infra] Test"
#        working-directory: infra
#        run: npm test
#      - name: "[Infra] Deploy Client"
#        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
#        uses: mooyoul/cloudwatch-logs-actions@v1.1.5
#        env:
#          AWS_DEFAULT_REGION: us-east-1
#          AWS_REGION: us-east-1
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          CDK_DEFAULT_ACCOUNT: ${{ secrets.CDK_DEFAULT_ACCOUNT }}
#        with:
#          group: poo-email
#          stream: ${{ github.sha }}-infra
#          retention: 30d
#          run: |
#            cd $GITHUB_WORKSPACE/infra
#            npm ci
#            npm run cdk -- deploy PooEmailServer PooEmailClient --ci --require-approval never
